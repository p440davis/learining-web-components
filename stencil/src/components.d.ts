/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface RcnShowHide {
    'for': string;
  }
  interface RcnShowHideAttributes extends StencilHTMLAttributes {
    'for'?: string;
  }

  interface RcnSideDrawer {
    'id': string;
  }
  interface RcnSideDrawerAttributes extends StencilHTMLAttributes {
    'id'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'RcnShowHide': Components.RcnShowHide;
    'RcnSideDrawer': Components.RcnSideDrawer;
  }

  interface StencilIntrinsicElements {
    'rcn-show-hide': Components.RcnShowHideAttributes;
    'rcn-side-drawer': Components.RcnSideDrawerAttributes;
  }


  interface HTMLRcnShowHideElement extends Components.RcnShowHide, HTMLStencilElement {}
  var HTMLRcnShowHideElement: {
    prototype: HTMLRcnShowHideElement;
    new (): HTMLRcnShowHideElement;
  };

  interface HTMLRcnSideDrawerElement extends Components.RcnSideDrawer, HTMLStencilElement {}
  var HTMLRcnSideDrawerElement: {
    prototype: HTMLRcnSideDrawerElement;
    new (): HTMLRcnSideDrawerElement;
  };

  interface HTMLElementTagNameMap {
    'rcn-show-hide': HTMLRcnShowHideElement
    'rcn-side-drawer': HTMLRcnSideDrawerElement
  }

  interface ElementTagNameMap {
    'rcn-show-hide': HTMLRcnShowHideElement;
    'rcn-side-drawer': HTMLRcnSideDrawerElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
